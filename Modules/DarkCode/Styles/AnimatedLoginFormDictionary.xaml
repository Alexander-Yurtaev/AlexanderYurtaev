<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:AlexanderYurtaev.Framework.Converters;assembly=AlexanderYurtaev.Framework"
    xmlns:helpers="clr-namespace:AlexanderYurtaev.Framework.Helpers;assembly=AlexanderYurtaev.Framework"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:views="clr-namespace:DarkCode.Views">

    <system:Double x:Key="NormalTextBoxWidth">224</system:Double>
    <system:Double x:Key="FocusedTextBoxWidth">280</system:Double>

    <system:Boolean x:Key="False">False</system:Boolean>
    <system:Boolean x:Key="True">True</system:Boolean>

    <converters:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />

    <Style TargetType="{x:Type views:AnimatedLoginForm}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="Microsoft Sans Serif" />
        <Setter Property="Background" Value="#34495e" />
    </Style>
    <Style x:Key="MainBorder" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="40" />
        <Setter Property="Background" Value="#191919" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="MainGrid" TargetType="{x:Type Grid}">
        <Setter Property="Width" Value="300" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <!--<Setter Property="Typography.Capitals" Value="AllSmallCaps" />-->
        <Setter Property="FontWeight" Value="450" />
        <Setter Property="FontSize" Value="32" />
        <Setter Property="Padding" Value="40,0" />
    </Style>
    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,20,0,10" />
        <Setter Property="Padding" Value="10,14" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#3498db" />
        <Setter Property="Width" Value="{StaticResource NormalTextBoxWidth}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Border.CornerRadius" Value="24" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Grid>
                            <TextBlock
                                Padding="{TemplateBinding Padding}"
                                FontSize="13"
                                Foreground="#727272"
                                Text="Username">
                                <TextBlock.Visibility>
                                    <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                                        <Binding Path="Text.IsEmpty" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TextBox}" />
                                        <!--<Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TextBox}" />-->
                                        <Binding Source="{StaticResource False}" />
                                    </MultiBinding>
                                </TextBlock.Visibility>
                            </TextBlock>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.25" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                        To="#2ecc71"
                                        Duration="0:0:0.25" />
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(Width)"
                                        To="{StaticResource FocusedTextBoxWidth}"
                                        Duration="0:0:0.25" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(Width)"
                                        To="{StaticResource NormalTextBoxWidth}"
                                        Duration="0:0:00.25" />
                                    <ColorAnimation
                                        Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                        To="#3498db"
                                        Duration="0:0:0.25" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Type PasswordBox}}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,10" />
        <Setter Property="Padding" Value="10,14" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#3498db" />
        <Setter Property="Width" Value="{StaticResource NormalTextBoxWidth}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Border.CornerRadius" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        x:Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Grid>
                            <TextBlock
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                FontSize="13"
                                Foreground="#727272"
                                Text="Password">
                                <TextBlock.Visibility>
                                    <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                                        <Binding Path="Password.IsEmpty">
                                            <Binding.Source>
                                                <helpers:PasswordBoxBindableWrapper PasswordBox="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Binding.Source>
                                        </Binding>
                                        <!--<Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=PasswordBox}" />-->
                                        <Binding Source="{StaticResource False}" />
                                    </MultiBinding>
                                </TextBlock.Visibility>
                            </TextBlock>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.25" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                        To="#2ecc71"
                                        Duration="0:0:0.25" />
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(Width)"
                                        To="{StaticResource FocusedTextBoxWidth}"
                                        Duration="0:0:00.25" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                        To="#3498db"
                                        Duration="0:0:0.25" />
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(Width)"
                                        To="{StaticResource NormalTextBoxWidth}"
                                        Duration="0:0:00.25" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,10,0,20" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="50" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#2ecc71" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Border.CornerRadius" Value="24" />
        <Setter Property="Cursor" Value="{x:Static Cursors.Hand}" />
        <Setter Property="FontWeight" Value="400" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            Name="Rectangle"
                            Fill="Transparent"
                            RadiusX="24"
                            RadiusY="24"
                            Stroke="#FF2ECC71"
                            StrokeThickness="2" />
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.25" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#2ecc71" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <!--<Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFC5CBF9" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF888888" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF888888" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsDefaulted" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>